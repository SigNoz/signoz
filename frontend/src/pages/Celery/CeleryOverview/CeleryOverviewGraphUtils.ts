/* eslint-disable sonarjs/no-duplicate-string */
import { getStepInterval } from 'components/CeleryTask/CeleryTaskGraph/CeleryTaskGraphUtils';
import { PANEL_TYPES } from 'constants/queryBuilder';
import { getWidgetQueryBuilder } from 'container/MetricsApplication/MetricsApplication.factory';
import { getWidgetQuery } from 'pages/MessagingQueues/MQDetails/MetricPage/MetricPageUtil';
import { Widgets } from 'types/api/dashboard/getAll';
import { DataTypes } from 'types/api/queryBuilder/queryAutocompleteResponse';
import { DataSource } from 'types/common/queryBuilder';

export const celeryOverviewRequestRateWidgetData = (): Widgets =>
	getWidgetQueryBuilder(
		getWidgetQuery({
			title: 'Request Rate',
			description: 'Represents request rate of the service',
			queryData: [
				{
					aggregateAttribute: {
						dataType: DataTypes.EMPTY,
						id: '------false',
						isColumn: false,
						isJSON: false,
						key: '',
						type: '',
					},
					aggregateOperator: 'rate',
					dataSource: DataSource.TRACES,
					disabled: false,
					expression: 'A',
					filters: {
						items: [
							{
								id: '66b09400',
								key: {
									dataType: DataTypes.String,
									id: 'service.name--string--resource--true',
									isColumn: true,
									isJSON: false,
									key: 'service.name',
									type: 'resource',
								},
								op: '=',
								value: 'consumer-svc-2',
							},
							{
								id: '7c62322c',
								key: {
									dataType: DataTypes.String,
									id: 'name--string----true',
									isColumn: true,
									isJSON: false,
									key: 'name',
									type: '',
								},
								op: '=',
								value: 'topic1 process',
							},
							{
								id: 'f428d54a',
								key: {
									dataType: DataTypes.String,
									id: 'messaging.destination.name--string--tag--false',
									isColumn: false,
									isJSON: false,
									key: 'messaging.destination.name',
									type: 'tag',
								},
								op: '=',
								value: 'topic1',
							},
							{
								id: '15202376',
								key: {
									dataType: DataTypes.String,
									id: 'kind_string--string----true',
									isColumn: true,
									isJSON: false,
									key: 'kind_string',
									type: '',
								},
								op: '=',
								value: 'Consumer',
							},
							{
								id: 'ba4fdb16',
								key: {
									dataType: DataTypes.String,
									id: 'messaging.system--string--tag--true',
									isColumn: true,
									isJSON: false,
									key: 'messaging.system',
									type: 'tag',
								},
								op: '=',
								value: 'kafka',
							},
						],
						op: 'AND',
					},
					functions: [],
					groupBy: [],
					having: [],
					legend: '',
					limit: null,
					orderBy: [],
					queryName: 'A',
					reduceTo: 'avg',
					spaceAggregation: 'sum',
					stepInterval: 60,
					timeAggregation: 'rate',
				},
			],
			panelTypes: PANEL_TYPES.VALUE,
		}),
	);

export const celeryOverviewErrorRateWidgetData = (): Widgets =>
	getWidgetQueryBuilder(
		getWidgetQuery({
			title: 'Error Rate',
			description: 'Represents Error rate of the service',
			queryData: [
				{
					aggregateAttribute: {
						dataType: DataTypes.EMPTY,
						id: '------false',
						isColumn: false,
						isJSON: false,
						key: '',
						type: '',
					},
					aggregateOperator: 'rate',
					dataSource: DataSource.TRACES,
					disabled: false,
					expression: 'A',
					filters: {
						items: [
							{
								id: '0a44dbf3',
								key: {
									dataType: DataTypes.String,
									id: 'service.name--string--resource--true',
									isColumn: true,
									isJSON: false,
									key: 'service.name',
									type: 'resource',
								},
								op: '=',
								value: 'worker1',
							},
							{
								id: '31b32f97',
								key: {
									dataType: DataTypes.String,
									id: 'name--string----true',
									isColumn: true,
									isJSON: false,
									key: 'name',
									type: '',
								},
								op: '=',
								value: 'run/tasks.tasks.add',
							},
							{
								id: '7f20ee62',
								key: {
									dataType: DataTypes.String,
									id: 'messaging.destination--string--tag--false',
									isColumn: false,
									isJSON: false,
									key: 'messaging.destination',
									type: 'tag',
								},
								op: '=',
								value: 'queue1',
							},
							{
								id: '76b02773',
								key: {
									dataType: DataTypes.String,
									id: 'kind_string--string----true',
									isColumn: true,
									isJSON: false,
									key: 'kind_string',
									type: '',
								},
								op: '=',
								value: 'Consumer',
							},
							{
								id: 'a2dc0a85',
								key: {
									dataType: DataTypes.bool,
									id: 'has_error--bool----true',
									isColumn: true,
									isJSON: false,
									key: 'has_error',
									type: '',
								},
								op: '=',
								value: 'true',
							},
						],
						op: 'AND',
					},
					functions: [],
					groupBy: [],
					having: [],
					legend: '',
					limit: null,
					orderBy: [],
					queryName: 'A',
					reduceTo: 'avg',
					spaceAggregation: 'sum',
					stepInterval: 60,
					timeAggregation: 'rate',
				},
			],
			panelTypes: PANEL_TYPES.VALUE,
		}),
	);

export const celeryOverviewAvgLatencyWidgetData = (): Widgets =>
	getWidgetQueryBuilder(
		getWidgetQuery({
			title: 'Avg Latency',
			description: 'Represents Avg Latency of the service',
			queryData: [
				{
					aggregateAttribute: {
						dataType: DataTypes.Float64,
						id: 'duration_nano--float64----true',
						isColumn: true,
						isJSON: false,
						key: 'duration_nano',
						type: '',
					},
					aggregateOperator: 'p95',
					dataSource: DataSource.TRACES,
					disabled: false,
					expression: 'A',
					filters: {
						items: [
							{
								id: 'a2c0bfe2',
								key: {
									dataType: DataTypes.String,
									id: 'service.name--string--resource--true',
									isColumn: true,
									isJSON: false,
									key: 'service.name',
									type: 'resource',
								},
								op: '=',
								value: 'worker1',
							},
							{
								id: '02e70326',
								key: {
									dataType: DataTypes.String,
									id: 'name--string----true',
									isColumn: true,
									isJSON: false,
									key: 'name',
									type: '',
								},
								op: '=',
								value: 'run/tasks.tasks.add',
							},
							{
								id: 'ac15cbac',
								key: {
									dataType: DataTypes.String,
									id: 'messaging.destination--string--tag--false',
									isColumn: false,
									isJSON: false,
									key: 'messaging.destination',
									type: 'tag',
								},
								op: '=',
								value: 'queue1',
							},
							{
								id: '59a7727a',
								key: {
									dataType: DataTypes.String,
									id: 'kind_string--string----true',
									isColumn: true,
									isJSON: false,
									key: 'kind_string',
									type: '',
								},
								op: '=',
								value: 'Consumer',
							},
						],
						op: 'AND',
					},
					functions: [],
					groupBy: [],
					having: [],
					legend: '{{messaging.destination.partition.id}}',
					limit: null,
					orderBy: [],
					queryName: 'A',
					reduceTo: 'avg',
					spaceAggregation: 'sum',
					stepInterval: 60,
					timeAggregation: 'p95',
				},
			],
			panelTypes: PANEL_TYPES.VALUE,
		}),
	);

export const celeryOverviewRequestRateGraphData = (
	startTime: number,
	endTime: number,
): Widgets =>
	getWidgetQueryBuilder(
		getWidgetQuery({
			title: 'Request rate',
			description: 'Represents Request rate of the service',
			queryData: [
				{
					aggregateAttribute: {
						dataType: DataTypes.EMPTY,
						id: '------false',
						isColumn: false,
						isJSON: false,
						key: '',
						type: '',
					},
					aggregateOperator: 'rate',
					dataSource: DataSource.TRACES,
					disabled: false,
					expression: 'A',
					filters: {
						items: [
							{
								id: 'bfe7f9f6',
								key: {
									dataType: DataTypes.String,
									id: 'service.name--string--resource--true',
									isColumn: true,
									isJSON: false,
									key: 'service.name',
									type: 'resource',
								},
								op: '=',
								value: 'consumer-svc-2',
							},
							{
								id: '0ae75c5b',
								key: {
									dataType: DataTypes.String,
									id: 'messaging.destination.name--string--tag--false',
									isColumn: false,
									isJSON: false,
									key: 'messaging.destination.name',
									type: 'tag',
								},
								op: '=',
								value: 'topic1',
							},
							{
								id: 'e694f23e',
								key: {
									dataType: DataTypes.String,
									id: 'name--string----true',
									isColumn: true,
									isJSON: false,
									key: 'name',
									type: '',
								},
								op: '=',
								value: 'topic1 process',
							},
							{
								id: '21fffed6',
								key: {
									dataType: DataTypes.String,
									id: 'kind_string--string----true',
									isColumn: true,
									isJSON: false,
									key: 'kind_string',
									type: '',
								},
								op: '=',
								value: 'Consumer',
							},
						],
						op: 'AND',
					},
					functions: [],
					groupBy: [
						{
							dataType: DataTypes.String,
							id: 'messaging.destination.partition.id--string--tag--false',
							isColumn: false,
							isJSON: false,
							key: 'messaging.destination.partition.id',
							type: 'tag',
						},
					],
					having: [],
					legend: '{{messaging.destination.partition.id}}',
					limit: null,
					orderBy: [],
					queryName: 'A',
					reduceTo: 'avg',
					spaceAggregation: 'sum',
					stepInterval: getStepInterval(startTime, endTime),
					timeAggregation: 'rate',
				},
			],
			panelTypes: PANEL_TYPES.BAR,
		}),
	);

export const celeryOverviewErrorRateGraphData = (
	startTime: number,
	endTime: number,
): Widgets =>
	getWidgetQueryBuilder(
		getWidgetQuery({
			title: 'Error Rate',
			description: 'Represents Error rate of the service',
			queryData: [
				{
					aggregateAttribute: {
						dataType: DataTypes.EMPTY,
						id: '------false',
						isColumn: false,
						isJSON: false,
						key: '',
						type: '',
					},
					aggregateOperator: 'rate',
					dataSource: DataSource.TRACES,
					disabled: false,
					expression: 'A',
					filters: {
						items: [
							{
								id: '1a77c475',
								key: {
									dataType: DataTypes.String,
									id: 'service.name--string--resource--true',
									isColumn: true,
									isJSON: false,
									key: 'service.name',
									type: 'resource',
								},
								op: '=',
								value: 'consumer-svc-2',
							},
							{
								id: '70630e97',
								key: {
									dataType: DataTypes.String,
									id: 'name--string----true',
									isColumn: true,
									isJSON: false,
									key: 'name',
									type: '',
								},
								op: '=',
								value: 'topic1 process',
							},
							{
								id: 'f41ad482',
								key: {
									dataType: DataTypes.EMPTY,
									isColumn: false,
									isJSON: false,
									key: 'messaging.destination.name',
									type: '',
								},
								op: '=',
								value: 'topic1',
							},
							{
								id: '00637dde',
								key: {
									dataType: DataTypes.String,
									id: 'kind_string--string----true',
									isColumn: true,
									isJSON: false,
									key: 'kind_string',
									type: '',
								},
								op: '=',
								value: 'Consumer',
							},
							{
								id: 'afa5fc10',
								key: {
									dataType: DataTypes.EMPTY,
									isColumn: false,
									isJSON: false,
									key: 'messaging.system',
									type: '',
								},
								op: '=',
								value: 'kafka',
							},
							{
								id: '9fdeebea',
								key: {
									dataType: DataTypes.bool,
									id: 'has_error--bool----true',
									isColumn: true,
									isJSON: false,
									key: 'has_error',
									type: '',
								},
								op: '=',
								value: 'true',
							},
						],
						op: 'AND',
					},
					functions: [],
					groupBy: [
						{
							dataType: DataTypes.String,
							id: 'messaging.destination.partition.id--string--tag--false',
							isColumn: false,
							isJSON: false,
							key: 'messaging.destination.partition.id',
							type: 'tag',
						},
					],
					having: [],
					legend: '{{messaging.destination.partition.id}}',
					limit: null,
					orderBy: [],
					queryName: 'A',
					reduceTo: 'avg',
					spaceAggregation: 'sum',
					stepInterval: getStepInterval(startTime, endTime),
					timeAggregation: 'rate',
				},
				{
					aggregateAttribute: {
						dataType: DataTypes.EMPTY,
						id: '------false',
						isColumn: false,
						isJSON: false,
						key: '',
						type: '',
					},
					aggregateOperator: 'rate',
					dataSource: DataSource.TRACES,
					disabled: false,
					expression: 'B',
					filters: {
						items: [
							{
								id: '93d85de1',
								key: {
									dataType: DataTypes.String,
									id: 'service.name--string--resource--true',
									isColumn: true,
									isJSON: false,
									key: 'service.name',
									type: 'resource',
								},
								op: '=',
								value: 'consumer-svc-2',
							},
							{
								id: '57632b3f',
								key: {
									dataType: DataTypes.String,
									id: 'name--string----true',
									isColumn: true,
									isJSON: false,
									key: 'name',
									type: '',
								},
								op: '=',
								value: 'topic1 process',
							},
							{
								id: '8d7f5e93',
								key: {
									dataType: DataTypes.EMPTY,
									isColumn: false,
									isJSON: false,
									key: 'messaging.destination.name',
									type: '',
								},
								op: '=',
								value: 'topic1',
							},
							{
								id: '64636499',
								key: {
									dataType: DataTypes.String,
									id: 'kind_string--string----true',
									isColumn: true,
									isJSON: false,
									key: 'kind_string',
									type: '',
								},
								op: '=',
								value: 'Consumer',
							},
							{
								id: '22d01c6b',
								key: {
									dataType: DataTypes.EMPTY,
									isColumn: false,
									isJSON: false,
									key: 'messaging.system',
									type: '',
								},
								op: '=',
								value: 'kafka',
							},
							{
								id: 'd13a99c4',
								key: {
									dataType: DataTypes.bool,
									id: 'has_error--bool----true',
									isColumn: true,
									isJSON: false,
									key: 'has_error',
									type: '',
								},
								op: '=',
								value: 'false',
							},
						],
						op: 'AND',
					},
					functions: [],
					groupBy: [
						{
							dataType: DataTypes.String,
							id: 'messaging.destination.partition.id--string--tag--false',
							isColumn: false,
							isJSON: false,
							key: 'messaging.destination.partition.id',
							type: 'tag',
						},
					],
					having: [],
					legend: '{{messaging.destination.partition.id}}',
					limit: null,
					orderBy: [],
					queryName: 'B',
					reduceTo: 'avg',
					spaceAggregation: 'sum',
					stepInterval: getStepInterval(startTime, endTime),
					timeAggregation: 'rate',
				},
			],
			panelTypes: PANEL_TYPES.BAR,
		}),
	);

export const celeryOverviewAvgLatencyGraphData = (
	startTime: number,
	endTime: number,
): Widgets =>
	getWidgetQueryBuilder(
		getWidgetQuery({
			title: 'Latency',
			description: 'Represents Latency of the service',
			queryData: [
				{
					aggregateAttribute: {
						dataType: DataTypes.ArrayFloat64,
						id: 'duration_nano--float64----true',
						isColumn: true,
						isJSON: false,
						key: 'duration_nano',
						type: '',
					},
					aggregateOperator: 'p90',
					dataSource: DataSource.TRACES,
					disabled: false,
					expression: 'C',
					filters: {
						items: [
							{
								id: 'fec96858',
								key: {
									dataType: DataTypes.String,
									id: 'service.name--string--resource--true',
									isColumn: true,
									isJSON: false,
									key: 'service.name',
									type: 'resource',
								},
								op: '=',
								value: 'consumer-svc-2',
							},
							{
								id: '36330bd8',
								key: {
									dataType: DataTypes.String,
									id: 'name--string----true',
									isColumn: true,
									isJSON: false,
									key: 'name',
									type: '',
								},
								op: '=',
								value: 'topic1 process',
							},
							{
								id: '061f3047',
								key: {
									dataType: DataTypes.EMPTY,
									isColumn: false,
									isJSON: false,
									key: 'messaging.destination.name',
									type: '',
								},
								op: '=',
								value: 'topic1',
							},
							{
								id: '9fd15439',
								key: {
									dataType: DataTypes.String,
									id: 'kind_string--string----true',
									isColumn: true,
									isJSON: false,
									key: 'kind_string',
									type: '',
								},
								op: '=',
								value: 'Consumer',
							},
							{
								id: '0f1af7b9',
								key: {
									dataType: DataTypes.EMPTY,
									isColumn: false,
									isJSON: false,
									key: 'messaging.system',
									type: '',
								},
								op: '=',
								value: 'kafka',
							},
						],
						op: 'AND',
					},
					functions: [],
					groupBy: [
						{
							dataType: DataTypes.String,
							id: 'messaging.destination.partition.id--string--tag--false',
							isColumn: false,
							isJSON: false,
							key: 'messaging.destination.partition.id',
							type: 'tag',
						},
					],
					having: [],
					legend: '{{messaging.destination.partition.id}}',
					limit: null,
					orderBy: [],
					queryName: 'C',
					reduceTo: 'avg',
					spaceAggregation: 'sum',
					stepInterval: getStepInterval(startTime, endTime),
					timeAggregation: 'p90',
				},
				{
					aggregateAttribute: {
						dataType: DataTypes.ArrayFloat64,
						id: 'duration_nano--float64----true',
						isColumn: true,
						isJSON: false,
						key: 'duration_nano',
						type: '',
					},
					aggregateOperator: 'p95',
					dataSource: DataSource.TRACES,
					disabled: false,
					expression: 'D',
					filters: {
						items: [
							{
								id: 'f0143e91',
								key: {
									dataType: DataTypes.String,
									id: 'service.name--string--resource--true',
									isColumn: true,
									isJSON: false,
									key: 'service.name',
									type: 'resource',
								},
								op: '=',
								value: 'consumer-svc-2',
							},
							{
								id: '0764eb8e',
								key: {
									dataType: DataTypes.String,
									id: 'name--string----true',
									isColumn: true,
									isJSON: false,
									key: 'name',
									type: '',
								},
								op: '=',
								value: 'topic1 process',
							},
							{
								id: 'e6b592ec',
								key: {
									dataType: DataTypes.EMPTY,
									isColumn: false,
									isJSON: false,
									key: 'messaging.destination.name',
									type: '',
								},
								op: '=',
								value: 'topic1',
							},
							{
								id: '4ca3b0b4',
								key: {
									dataType: DataTypes.String,
									id: 'kind_string--string----true',
									isColumn: true,
									isJSON: false,
									key: 'kind_string',
									type: '',
								},
								op: '=',
								value: 'Consumer',
							},
							{
								id: 'd81770c9',
								key: {
									dataType: DataTypes.EMPTY,
									isColumn: false,
									isJSON: false,
									key: 'messaging.system',
									type: '',
								},
								op: '=',
								value: 'kafka',
							},
						],
						op: 'AND',
					},
					functions: [],
					groupBy: [
						{
							dataType: DataTypes.String,
							id: 'messaging.destination.partition.id--string--tag--false',
							isColumn: false,
							isJSON: false,
							key: 'messaging.destination.partition.id',
							type: 'tag',
						},
					],
					having: [],
					legend: '{{messaging.destination.partition.id}}',
					limit: null,
					orderBy: [],
					queryName: 'D',
					reduceTo: 'avg',
					spaceAggregation: 'sum',
					stepInterval: getStepInterval(startTime, endTime),
					timeAggregation: 'p95',
				},
				{
					aggregateAttribute: {
						dataType: DataTypes.ArrayFloat64,
						id: 'duration_nano--float64----true',
						isColumn: true,
						isJSON: false,
						key: 'duration_nano',
						type: '',
					},
					aggregateOperator: 'p99',
					dataSource: DataSource.TRACES,
					disabled: false,
					expression: 'E',
					filters: {
						items: [
							{
								id: 'a8f0c5e5',
								key: {
									dataType: DataTypes.String,
									id: 'service.name--string--resource--true',
									isColumn: true,
									isJSON: false,
									key: 'service.name',
									type: 'resource',
								},
								op: '=',
								value: 'consumer-svc-2',
							},
							{
								id: '60c81993',
								key: {
									dataType: DataTypes.String,
									id: 'name--string----true',
									isColumn: true,
									isJSON: false,
									key: 'name',
									type: '',
								},
								op: '=',
								value: 'topic1 process',
							},
							{
								id: '7f054fb2',
								key: {
									dataType: DataTypes.EMPTY,
									isColumn: false,
									isJSON: false,
									key: 'messaging.destination.name',
									type: '',
								},
								op: '=',
								value: 'topic1',
							},
							{
								id: 'e825e894',
								key: {
									dataType: DataTypes.String,
									id: 'kind_string--string----true',
									isColumn: true,
									isJSON: false,
									key: 'kind_string',
									type: '',
								},
								op: '=',
								value: 'Consumer',
							},
							{
								id: '9ba10a06',
								key: {
									dataType: DataTypes.EMPTY,
									isColumn: false,
									isJSON: false,
									key: 'messaging.system',
									type: '',
								},
								op: '=',
								value: 'kafka',
							},
						],
						op: 'AND',
					},
					functions: [],
					groupBy: [
						{
							dataType: DataTypes.String,
							id: 'messaging.destination.partition.id--string--tag--false',
							isColumn: false,
							isJSON: false,
							key: 'messaging.destination.partition.id',
							type: 'tag',
						},
					],
					having: [],
					legend: '{{messaging.destination.partition.id}}',
					limit: null,
					orderBy: [],
					queryName: 'E',
					reduceTo: 'avg',
					spaceAggregation: 'sum',
					stepInterval: getStepInterval(startTime, endTime),
					timeAggregation: 'p99',
				},
			],
			panelTypes: PANEL_TYPES.TIME_SERIES,
		}),
	);
