// Code generated from grammar/FilterQuery.g4 by ANTLR 4.13.2. DO NOT EDIT.

package parser

import (
	"fmt"
	"github.com/antlr4-go/antlr/v4"
	"sync"
	"unicode"
)

// Suppress unused import error
var _ = fmt.Printf
var _ = sync.Once{}
var _ = unicode.IsLetter

type FilterQueryLexer struct {
	*antlr.BaseLexer
	channelNames []string
	modeNames    []string
	// TODO: EOF string
}

var FilterQueryLexerLexerStaticData struct {
	once                   sync.Once
	serializedATN          []int32
	ChannelNames           []string
	ModeNames              []string
	LiteralNames           []string
	SymbolicNames          []string
	RuleNames              []string
	PredictionContextCache *antlr.PredictionContextCache
	atn                    *antlr.ATN
	decisionToDFA          []*antlr.DFA
}

func filterquerylexerLexerInit() {
	staticData := &FilterQueryLexerLexerStaticData
	staticData.ChannelNames = []string{
		"DEFAULT_TOKEN_CHANNEL", "HIDDEN",
	}
	staticData.ModeNames = []string{
		"DEFAULT_MODE",
	}
	staticData.LiteralNames = []string{
		"", "'('", "')'", "'['", "']'", "','", "", "'!='", "'<>'", "'<'", "'<='",
		"'>'", "'>='",
	}
	staticData.SymbolicNames = []string{
		"", "LPAREN", "RPAREN", "LBRACK", "RBRACK", "COMMA", "EQUALS", "NOT_EQUALS",
		"NEQ", "LT", "LE", "GT", "GE", "LIKE", "NOT_LIKE", "ILIKE", "NOT_ILIKE",
		"BETWEEN", "EXISTS", "REGEXP", "CONTAINS", "IN", "NOT", "AND", "OR",
		"HASTOKEN", "HAS", "HASANY", "HASALL", "BOOL", "NUMBER", "QUOTED_TEXT",
		"KEY", "WS", "FREETEXT",
	}
	staticData.RuleNames = []string{
		"LPAREN", "RPAREN", "LBRACK", "RBRACK", "COMMA", "EQUALS", "NOT_EQUALS",
		"NEQ", "LT", "LE", "GT", "GE", "LIKE", "NOT_LIKE", "ILIKE", "NOT_ILIKE",
		"BETWEEN", "EXISTS", "REGEXP", "CONTAINS", "IN", "NOT", "AND", "OR",
		"HASTOKEN", "HAS", "HASANY", "HASALL", "BOOL", "SIGN", "NUMBER", "QUOTED_TEXT",
		"SEGMENT", "EMPTY_BRACKS", "OLD_JSON_BRACKS", "KEY", "WS", "DIGIT",
		"FREETEXT",
	}
	staticData.PredictionContextCache = antlr.NewPredictionContextCache()
	staticData.serializedATN = []int32{
		4, 0, 34, 345, 6, -1, 2, 0, 7, 0, 2, 1, 7, 1, 2, 2, 7, 2, 2, 3, 7, 3, 2,
		4, 7, 4, 2, 5, 7, 5, 2, 6, 7, 6, 2, 7, 7, 7, 2, 8, 7, 8, 2, 9, 7, 9, 2,
		10, 7, 10, 2, 11, 7, 11, 2, 12, 7, 12, 2, 13, 7, 13, 2, 14, 7, 14, 2, 15,
		7, 15, 2, 16, 7, 16, 2, 17, 7, 17, 2, 18, 7, 18, 2, 19, 7, 19, 2, 20, 7,
		20, 2, 21, 7, 21, 2, 22, 7, 22, 2, 23, 7, 23, 2, 24, 7, 24, 2, 25, 7, 25,
		2, 26, 7, 26, 2, 27, 7, 27, 2, 28, 7, 28, 2, 29, 7, 29, 2, 30, 7, 30, 2,
		31, 7, 31, 2, 32, 7, 32, 2, 33, 7, 33, 2, 34, 7, 34, 2, 35, 7, 35, 2, 36,
		7, 36, 2, 37, 7, 37, 2, 38, 7, 38, 1, 0, 1, 0, 1, 1, 1, 1, 1, 2, 1, 2,
		1, 3, 1, 3, 1, 4, 1, 4, 1, 5, 1, 5, 1, 5, 3, 5, 93, 8, 5, 1, 6, 1, 6, 1,
		6, 1, 7, 1, 7, 1, 7, 1, 8, 1, 8, 1, 9, 1, 9, 1, 9, 1, 10, 1, 10, 1, 11,
		1, 11, 1, 11, 1, 12, 1, 12, 1, 12, 1, 12, 1, 12, 1, 13, 1, 13, 1, 13, 1,
		13, 4, 13, 120, 8, 13, 11, 13, 12, 13, 121, 1, 13, 1, 13, 1, 13, 1, 13,
		1, 13, 1, 14, 1, 14, 1, 14, 1, 14, 1, 14, 1, 14, 1, 15, 1, 15, 1, 15, 1,
		15, 4, 15, 139, 8, 15, 11, 15, 12, 15, 140, 1, 15, 1, 15, 1, 15, 1, 15,
		1, 15, 1, 15, 1, 16, 1, 16, 1, 16, 1, 16, 1, 16, 1, 16, 1, 16, 1, 16, 1,
		17, 1, 17, 1, 17, 1, 17, 1, 17, 1, 17, 3, 17, 163, 8, 17, 1, 18, 1, 18,
		1, 18, 1, 18, 1, 18, 1, 18, 1, 18, 1, 19, 1, 19, 1, 19, 1, 19, 1, 19, 1,
		19, 1, 19, 1, 19, 3, 19, 180, 8, 19, 1, 20, 1, 20, 1, 20, 1, 21, 1, 21,
		1, 21, 1, 21, 1, 22, 1, 22, 1, 22, 1, 22, 1, 23, 1, 23, 1, 23, 1, 24, 1,
		24, 1, 24, 1, 24, 1, 24, 1, 24, 1, 24, 1, 24, 1, 24, 1, 25, 1, 25, 1, 25,
		1, 25, 1, 26, 1, 26, 1, 26, 1, 26, 1, 26, 1, 26, 1, 26, 1, 27, 1, 27, 1,
		27, 1, 27, 1, 27, 1, 27, 1, 27, 1, 28, 1, 28, 1, 28, 1, 28, 1, 28, 1, 28,
		1, 28, 1, 28, 1, 28, 3, 28, 232, 8, 28, 1, 29, 1, 29, 1, 30, 3, 30, 237,
		8, 30, 1, 30, 4, 30, 240, 8, 30, 11, 30, 12, 30, 241, 1, 30, 1, 30, 5,
		30, 246, 8, 30, 10, 30, 12, 30, 249, 9, 30, 3, 30, 251, 8, 30, 1, 30, 1,
		30, 3, 30, 255, 8, 30, 1, 30, 4, 30, 258, 8, 30, 11, 30, 12, 30, 259, 3,
		30, 262, 8, 30, 1, 30, 3, 30, 265, 8, 30, 1, 30, 1, 30, 4, 30, 269, 8,
		30, 11, 30, 12, 30, 270, 1, 30, 1, 30, 3, 30, 275, 8, 30, 1, 30, 4, 30,
		278, 8, 30, 11, 30, 12, 30, 279, 3, 30, 282, 8, 30, 3, 30, 284, 8, 30,
		1, 31, 1, 31, 1, 31, 1, 31, 5, 31, 290, 8, 31, 10, 31, 12, 31, 293, 9,
		31, 1, 31, 1, 31, 1, 31, 1, 31, 1, 31, 5, 31, 300, 8, 31, 10, 31, 12, 31,
		303, 9, 31, 1, 31, 3, 31, 306, 8, 31, 1, 32, 1, 32, 5, 32, 310, 8, 32,
		10, 32, 12, 32, 313, 9, 32, 1, 33, 1, 33, 1, 33, 1, 34, 1, 34, 1, 34, 1,
		34, 1, 35, 1, 35, 1, 35, 1, 35, 1, 35, 5, 35, 327, 8, 35, 10, 35, 12, 35,
		330, 9, 35, 1, 36, 4, 36, 333, 8, 36, 11, 36, 12, 36, 334, 1, 36, 1, 36,
		1, 37, 1, 37, 1, 38, 4, 38, 342, 8, 38, 11, 38, 12, 38, 343, 0, 0, 39,
		1, 1, 3, 2, 5, 3, 7, 4, 9, 5, 11, 6, 13, 7, 15, 8, 17, 9, 19, 10, 21, 11,
		23, 12, 25, 13, 27, 14, 29, 15, 31, 16, 33, 17, 35, 18, 37, 19, 39, 20,
		41, 21, 43, 22, 45, 23, 47, 24, 49, 25, 51, 26, 53, 27, 55, 28, 57, 29,
		59, 0, 61, 30, 63, 31, 65, 0, 67, 0, 69, 0, 71, 32, 73, 33, 75, 0, 77,
		34, 1, 0, 30, 2, 0, 76, 76, 108, 108, 2, 0, 73, 73, 105, 105, 2, 0, 75,
		75, 107, 107, 2, 0, 69, 69, 101, 101, 2, 0, 78, 78, 110, 110, 2, 0, 79,
		79, 111, 111, 2, 0, 84, 84, 116, 116, 2, 0, 9, 9, 32, 32, 2, 0, 66, 66,
		98, 98, 2, 0, 87, 87, 119, 119, 2, 0, 88, 88, 120, 120, 2, 0, 83, 83, 115,
		115, 2, 0, 82, 82, 114, 114, 2, 0, 71, 71, 103, 103, 2, 0, 80, 80, 112,
		112, 2, 0, 67, 67, 99, 99, 2, 0, 65, 65, 97, 97, 2, 0, 68, 68, 100, 100,
		2, 0, 72, 72, 104, 104, 2, 0, 89, 89, 121, 121, 2, 0, 85, 85, 117, 117,
		2, 0, 70, 70, 102, 102, 2, 0, 43, 43, 45, 45, 2, 0, 34, 34, 92, 92, 2,
		0, 39, 39, 92, 92, 4, 0, 36, 36, 65, 90, 95, 95, 97, 122, 6, 0, 36, 36,
		45, 45, 47, 58, 65, 90, 95, 95, 97, 122, 3, 0, 9, 10, 13, 13, 32, 32, 1,
		0, 48, 57, 8, 0, 9, 10, 13, 13, 32, 34, 39, 41, 44, 44, 60, 62, 91, 91,
		93, 93, 369, 0, 1, 1, 0, 0, 0, 0, 3, 1, 0, 0, 0, 0, 5, 1, 0, 0, 0, 0, 7,
		1, 0, 0, 0, 0, 9, 1, 0, 0, 0, 0, 11, 1, 0, 0, 0, 0, 13, 1, 0, 0, 0, 0,
		15, 1, 0, 0, 0, 0, 17, 1, 0, 0, 0, 0, 19, 1, 0, 0, 0, 0, 21, 1, 0, 0, 0,
		0, 23, 1, 0, 0, 0, 0, 25, 1, 0, 0, 0, 0, 27, 1, 0, 0, 0, 0, 29, 1, 0, 0,
		0, 0, 31, 1, 0, 0, 0, 0, 33, 1, 0, 0, 0, 0, 35, 1, 0, 0, 0, 0, 37, 1, 0,
		0, 0, 0, 39, 1, 0, 0, 0, 0, 41, 1, 0, 0, 0, 0, 43, 1, 0, 0, 0, 0, 45, 1,
		0, 0, 0, 0, 47, 1, 0, 0, 0, 0, 49, 1, 0, 0, 0, 0, 51, 1, 0, 0, 0, 0, 53,
		1, 0, 0, 0, 0, 55, 1, 0, 0, 0, 0, 57, 1, 0, 0, 0, 0, 61, 1, 0, 0, 0, 0,
		63, 1, 0, 0, 0, 0, 71, 1, 0, 0, 0, 0, 73, 1, 0, 0, 0, 0, 77, 1, 0, 0, 0,
		1, 79, 1, 0, 0, 0, 3, 81, 1, 0, 0, 0, 5, 83, 1, 0, 0, 0, 7, 85, 1, 0, 0,
		0, 9, 87, 1, 0, 0, 0, 11, 92, 1, 0, 0, 0, 13, 94, 1, 0, 0, 0, 15, 97, 1,
		0, 0, 0, 17, 100, 1, 0, 0, 0, 19, 102, 1, 0, 0, 0, 21, 105, 1, 0, 0, 0,
		23, 107, 1, 0, 0, 0, 25, 110, 1, 0, 0, 0, 27, 115, 1, 0, 0, 0, 29, 128,
		1, 0, 0, 0, 31, 134, 1, 0, 0, 0, 33, 148, 1, 0, 0, 0, 35, 156, 1, 0, 0,
		0, 37, 164, 1, 0, 0, 0, 39, 171, 1, 0, 0, 0, 41, 181, 1, 0, 0, 0, 43, 184,
		1, 0, 0, 0, 45, 188, 1, 0, 0, 0, 47, 192, 1, 0, 0, 0, 49, 195, 1, 0, 0,
		0, 51, 204, 1, 0, 0, 0, 53, 208, 1, 0, 0, 0, 55, 215, 1, 0, 0, 0, 57, 231,
		1, 0, 0, 0, 59, 233, 1, 0, 0, 0, 61, 283, 1, 0, 0, 0, 63, 305, 1, 0, 0,
		0, 65, 307, 1, 0, 0, 0, 67, 314, 1, 0, 0, 0, 69, 317, 1, 0, 0, 0, 71, 321,
		1, 0, 0, 0, 73, 332, 1, 0, 0, 0, 75, 338, 1, 0, 0, 0, 77, 341, 1, 0, 0,
		0, 79, 80, 5, 40, 0, 0, 80, 2, 1, 0, 0, 0, 81, 82, 5, 41, 0, 0, 82, 4,
		1, 0, 0, 0, 83, 84, 5, 91, 0, 0, 84, 6, 1, 0, 0, 0, 85, 86, 5, 93, 0, 0,
		86, 8, 1, 0, 0, 0, 87, 88, 5, 44, 0, 0, 88, 10, 1, 0, 0, 0, 89, 93, 5,
		61, 0, 0, 90, 91, 5, 61, 0, 0, 91, 93, 5, 61, 0, 0, 92, 89, 1, 0, 0, 0,
		92, 90, 1, 0, 0, 0, 93, 12, 1, 0, 0, 0, 94, 95, 5, 33, 0, 0, 95, 96, 5,
		61, 0, 0, 96, 14, 1, 0, 0, 0, 97, 98, 5, 60, 0, 0, 98, 99, 5, 62, 0, 0,
		99, 16, 1, 0, 0, 0, 100, 101, 5, 60, 0, 0, 101, 18, 1, 0, 0, 0, 102, 103,
		5, 60, 0, 0, 103, 104, 5, 61, 0, 0, 104, 20, 1, 0, 0, 0, 105, 106, 5, 62,
		0, 0, 106, 22, 1, 0, 0, 0, 107, 108, 5, 62, 0, 0, 108, 109, 5, 61, 0, 0,
		109, 24, 1, 0, 0, 0, 110, 111, 7, 0, 0, 0, 111, 112, 7, 1, 0, 0, 112, 113,
		7, 2, 0, 0, 113, 114, 7, 3, 0, 0, 114, 26, 1, 0, 0, 0, 115, 116, 7, 4,
		0, 0, 116, 117, 7, 5, 0, 0, 117, 119, 7, 6, 0, 0, 118, 120, 7, 7, 0, 0,
		119, 118, 1, 0, 0, 0, 120, 121, 1, 0, 0, 0, 121, 119, 1, 0, 0, 0, 121,
		122, 1, 0, 0, 0, 122, 123, 1, 0, 0, 0, 123, 124, 7, 0, 0, 0, 124, 125,
		7, 1, 0, 0, 125, 126, 7, 2, 0, 0, 126, 127, 7, 3, 0, 0, 127, 28, 1, 0,
		0, 0, 128, 129, 7, 1, 0, 0, 129, 130, 7, 0, 0, 0, 130, 131, 7, 1, 0, 0,
		131, 132, 7, 2, 0, 0, 132, 133, 7, 3, 0, 0, 133, 30, 1, 0, 0, 0, 134, 135,
		7, 4, 0, 0, 135, 136, 7, 5, 0, 0, 136, 138, 7, 6, 0, 0, 137, 139, 7, 7,
		0, 0, 138, 137, 1, 0, 0, 0, 139, 140, 1, 0, 0, 0, 140, 138, 1, 0, 0, 0,
		140, 141, 1, 0, 0, 0, 141, 142, 1, 0, 0, 0, 142, 143, 7, 1, 0, 0, 143,
		144, 7, 0, 0, 0, 144, 145, 7, 1, 0, 0, 145, 146, 7, 2, 0, 0, 146, 147,
		7, 3, 0, 0, 147, 32, 1, 0, 0, 0, 148, 149, 7, 8, 0, 0, 149, 150, 7, 3,
		0, 0, 150, 151, 7, 6, 0, 0, 151, 152, 7, 9, 0, 0, 152, 153, 7, 3, 0, 0,
		153, 154, 7, 3, 0, 0, 154, 155, 7, 4, 0, 0, 155, 34, 1, 0, 0, 0, 156, 157,
		7, 3, 0, 0, 157, 158, 7, 10, 0, 0, 158, 159, 7, 1, 0, 0, 159, 160, 7, 11,
		0, 0, 160, 162, 7, 6, 0, 0, 161, 163, 7, 11, 0, 0, 162, 161, 1, 0, 0, 0,
		162, 163, 1, 0, 0, 0, 163, 36, 1, 0, 0, 0, 164, 165, 7, 12, 0, 0, 165,
		166, 7, 3, 0, 0, 166, 167, 7, 13, 0, 0, 167, 168, 7, 3, 0, 0, 168, 169,
		7, 10, 0, 0, 169, 170, 7, 14, 0, 0, 170, 38, 1, 0, 0, 0, 171, 172, 7, 15,
		0, 0, 172, 173, 7, 5, 0, 0, 173, 174, 7, 4, 0, 0, 174, 175, 7, 6, 0, 0,
		175, 176, 7, 16, 0, 0, 176, 177, 7, 1, 0, 0, 177, 179, 7, 4, 0, 0, 178,
		180, 7, 11, 0, 0, 179, 178, 1, 0, 0, 0, 179, 180, 1, 0, 0, 0, 180, 40,
		1, 0, 0, 0, 181, 182, 7, 1, 0, 0, 182, 183, 7, 4, 0, 0, 183, 42, 1, 0,
		0, 0, 184, 185, 7, 4, 0, 0, 185, 186, 7, 5, 0, 0, 186, 187, 7, 6, 0, 0,
		187, 44, 1, 0, 0, 0, 188, 189, 7, 16, 0, 0, 189, 190, 7, 4, 0, 0, 190,
		191, 7, 17, 0, 0, 191, 46, 1, 0, 0, 0, 192, 193, 7, 5, 0, 0, 193, 194,
		7, 12, 0, 0, 194, 48, 1, 0, 0, 0, 195, 196, 7, 18, 0, 0, 196, 197, 7, 16,
		0, 0, 197, 198, 7, 11, 0, 0, 198, 199, 7, 6, 0, 0, 199, 200, 7, 5, 0, 0,
		200, 201, 7, 2, 0, 0, 201, 202, 7, 3, 0, 0, 202, 203, 7, 4, 0, 0, 203,
		50, 1, 0, 0, 0, 204, 205, 7, 18, 0, 0, 205, 206, 7, 16, 0, 0, 206, 207,
		7, 11, 0, 0, 207, 52, 1, 0, 0, 0, 208, 209, 7, 18, 0, 0, 209, 210, 7, 16,
		0, 0, 210, 211, 7, 11, 0, 0, 211, 212, 7, 16, 0, 0, 212, 213, 7, 4, 0,
		0, 213, 214, 7, 19, 0, 0, 214, 54, 1, 0, 0, 0, 215, 216, 7, 18, 0, 0, 216,
		217, 7, 16, 0, 0, 217, 218, 7, 11, 0, 0, 218, 219, 7, 16, 0, 0, 219, 220,
		7, 0, 0, 0, 220, 221, 7, 0, 0, 0, 221, 56, 1, 0, 0, 0, 222, 223, 7, 6,
		0, 0, 223, 224, 7, 12, 0, 0, 224, 225, 7, 20, 0, 0, 225, 232, 7, 3, 0,
		0, 226, 227, 7, 21, 0, 0, 227, 228, 7, 16, 0, 0, 228, 229, 7, 0, 0, 0,
		229, 230, 7, 11, 0, 0, 230, 232, 7, 3, 0, 0, 231, 222, 1, 0, 0, 0, 231,
		226, 1, 0, 0, 0, 232, 58, 1, 0, 0, 0, 233, 234, 7, 22, 0, 0, 234, 60, 1,
		0, 0, 0, 235, 237, 3, 59, 29, 0, 236, 235, 1, 0, 0, 0, 236, 237, 1, 0,
		0, 0, 237, 239, 1, 0, 0, 0, 238, 240, 3, 75, 37, 0, 239, 238, 1, 0, 0,
		0, 240, 241, 1, 0, 0, 0, 241, 239, 1, 0, 0, 0, 241, 242, 1, 0, 0, 0, 242,
		250, 1, 0, 0, 0, 243, 247, 5, 46, 0, 0, 244, 246, 3, 75, 37, 0, 245, 244,
		1, 0, 0, 0, 246, 249, 1, 0, 0, 0, 247, 245, 1, 0, 0, 0, 247, 248, 1, 0,
		0, 0, 248, 251, 1, 0, 0, 0, 249, 247, 1, 0, 0, 0, 250, 243, 1, 0, 0, 0,
		250, 251, 1, 0, 0, 0, 251, 261, 1, 0, 0, 0, 252, 254, 7, 3, 0, 0, 253,
		255, 3, 59, 29, 0, 254, 253, 1, 0, 0, 0, 254, 255, 1, 0, 0, 0, 255, 257,
		1, 0, 0, 0, 256, 258, 3, 75, 37, 0, 257, 256, 1, 0, 0, 0, 258, 259, 1,
		0, 0, 0, 259, 257, 1, 0, 0, 0, 259, 260, 1, 0, 0, 0, 260, 262, 1, 0, 0,
		0, 261, 252, 1, 0, 0, 0, 261, 262, 1, 0, 0, 0, 262, 284, 1, 0, 0, 0, 263,
		265, 3, 59, 29, 0, 264, 263, 1, 0, 0, 0, 264, 265, 1, 0, 0, 0, 265, 266,
		1, 0, 0, 0, 266, 268, 5, 46, 0, 0, 267, 269, 3, 75, 37, 0, 268, 267, 1,
		0, 0, 0, 269, 270, 1, 0, 0, 0, 270, 268, 1, 0, 0, 0, 270, 271, 1, 0, 0,
		0, 271, 281, 1, 0, 0, 0, 272, 274, 7, 3, 0, 0, 273, 275, 3, 59, 29, 0,
		274, 273, 1, 0, 0, 0, 274, 275, 1, 0, 0, 0, 275, 277, 1, 0, 0, 0, 276,
		278, 3, 75, 37, 0, 277, 276, 1, 0, 0, 0, 278, 279, 1, 0, 0, 0, 279, 277,
		1, 0, 0, 0, 279, 280, 1, 0, 0, 0, 280, 282, 1, 0, 0, 0, 281, 272, 1, 0,
		0, 0, 281, 282, 1, 0, 0, 0, 282, 284, 1, 0, 0, 0, 283, 236, 1, 0, 0, 0,
		283, 264, 1, 0, 0, 0, 284, 62, 1, 0, 0, 0, 285, 291, 5, 34, 0, 0, 286,
		290, 8, 23, 0, 0, 287, 288, 5, 92, 0, 0, 288, 290, 9, 0, 0, 0, 289, 286,
		1, 0, 0, 0, 289, 287, 1, 0, 0, 0, 290, 293, 1, 0, 0, 0, 291, 289, 1, 0,
		0, 0, 291, 292, 1, 0, 0, 0, 292, 294, 1, 0, 0, 0, 293, 291, 1, 0, 0, 0,
		294, 306, 5, 34, 0, 0, 295, 301, 5, 39, 0, 0, 296, 300, 8, 24, 0, 0, 297,
		298, 5, 92, 0, 0, 298, 300, 9, 0, 0, 0, 299, 296, 1, 0, 0, 0, 299, 297,
		1, 0, 0, 0, 300, 303, 1, 0, 0, 0, 301, 299, 1, 0, 0, 0, 301, 302, 1, 0,
		0, 0, 302, 304, 1, 0, 0, 0, 303, 301, 1, 0, 0, 0, 304, 306, 5, 39, 0, 0,
		305, 285, 1, 0, 0, 0, 305, 295, 1, 0, 0, 0, 306, 64, 1, 0, 0, 0, 307, 311,
		7, 25, 0, 0, 308, 310, 7, 26, 0, 0, 309, 308, 1, 0, 0, 0, 310, 313, 1,
		0, 0, 0, 311, 309, 1, 0, 0, 0, 311, 312, 1, 0, 0, 0, 312, 66, 1, 0, 0,
		0, 313, 311, 1, 0, 0, 0, 314, 315, 5, 91, 0, 0, 315, 316, 5, 93, 0, 0,
		316, 68, 1, 0, 0, 0, 317, 318, 5, 91, 0, 0, 318, 319, 5, 42, 0, 0, 319,
		320, 5, 93, 0, 0, 320, 70, 1, 0, 0, 0, 321, 328, 3, 65, 32, 0, 322, 323,
		5, 46, 0, 0, 323, 327, 3, 65, 32, 0, 324, 327, 3, 67, 33, 0, 325, 327,
		3, 69, 34, 0, 326, 322, 1, 0, 0, 0, 326, 324, 1, 0, 0, 0, 326, 325, 1,
		0, 0, 0, 327, 330, 1, 0, 0, 0, 328, 326, 1, 0, 0, 0, 328, 329, 1, 0, 0,
		0, 329, 72, 1, 0, 0, 0, 330, 328, 1, 0, 0, 0, 331, 333, 7, 27, 0, 0, 332,
		331, 1, 0, 0, 0, 333, 334, 1, 0, 0, 0, 334, 332, 1, 0, 0, 0, 334, 335,
		1, 0, 0, 0, 335, 336, 1, 0, 0, 0, 336, 337, 6, 36, 0, 0, 337, 74, 1, 0,
		0, 0, 338, 339, 7, 28, 0, 0, 339, 76, 1, 0, 0, 0, 340, 342, 8, 29, 0, 0,
		341, 340, 1, 0, 0, 0, 342, 343, 1, 0, 0, 0, 343, 341, 1, 0, 0, 0, 343,
		344, 1, 0, 0, 0, 344, 78, 1, 0, 0, 0, 30, 0, 92, 121, 140, 162, 179, 231,
		236, 241, 247, 250, 254, 259, 261, 264, 270, 274, 279, 281, 283, 289, 291,
		299, 301, 305, 311, 326, 328, 334, 343, 1, 6, 0, 0,
	}
	deserializer := antlr.NewATNDeserializer(nil)
	staticData.atn = deserializer.Deserialize(staticData.serializedATN)
	atn := staticData.atn
	staticData.decisionToDFA = make([]*antlr.DFA, len(atn.DecisionToState))
	decisionToDFA := staticData.decisionToDFA
	for index, state := range atn.DecisionToState {
		decisionToDFA[index] = antlr.NewDFA(state, index)
	}
}

// FilterQueryLexerInit initializes any static state used to implement FilterQueryLexer. By default the
// static state used to implement the lexer is lazily initialized during the first call to
// NewFilterQueryLexer(). You can call this function if you wish to initialize the static state ahead
// of time.
func FilterQueryLexerInit() {
	staticData := &FilterQueryLexerLexerStaticData
	staticData.once.Do(filterquerylexerLexerInit)
}

// NewFilterQueryLexer produces a new lexer instance for the optional input antlr.CharStream.
func NewFilterQueryLexer(input antlr.CharStream) *FilterQueryLexer {
	FilterQueryLexerInit()
	l := new(FilterQueryLexer)
	l.BaseLexer = antlr.NewBaseLexer(input)
	staticData := &FilterQueryLexerLexerStaticData
	l.Interpreter = antlr.NewLexerATNSimulator(l, staticData.atn, staticData.decisionToDFA, staticData.PredictionContextCache)
	l.channelNames = staticData.ChannelNames
	l.modeNames = staticData.ModeNames
	l.RuleNames = staticData.RuleNames
	l.LiteralNames = staticData.LiteralNames
	l.SymbolicNames = staticData.SymbolicNames
	l.GrammarFileName = "FilterQuery.g4"
	// TODO: l.EOF = antlr.TokenEOF

	return l
}

// FilterQueryLexer tokens.
const (
	FilterQueryLexerLPAREN      = 1
	FilterQueryLexerRPAREN      = 2
	FilterQueryLexerLBRACK      = 3
	FilterQueryLexerRBRACK      = 4
	FilterQueryLexerCOMMA       = 5
	FilterQueryLexerEQUALS      = 6
	FilterQueryLexerNOT_EQUALS  = 7
	FilterQueryLexerNEQ         = 8
	FilterQueryLexerLT          = 9
	FilterQueryLexerLE          = 10
	FilterQueryLexerGT          = 11
	FilterQueryLexerGE          = 12
	FilterQueryLexerLIKE        = 13
	FilterQueryLexerNOT_LIKE    = 14
	FilterQueryLexerILIKE       = 15
	FilterQueryLexerNOT_ILIKE   = 16
	FilterQueryLexerBETWEEN     = 17
	FilterQueryLexerEXISTS      = 18
	FilterQueryLexerREGEXP      = 19
	FilterQueryLexerCONTAINS    = 20
	FilterQueryLexerIN          = 21
	FilterQueryLexerNOT         = 22
	FilterQueryLexerAND         = 23
	FilterQueryLexerOR          = 24
	FilterQueryLexerHASTOKEN    = 25
	FilterQueryLexerHAS         = 26
	FilterQueryLexerHASANY      = 27
	FilterQueryLexerHASALL      = 28
	FilterQueryLexerBOOL        = 29
	FilterQueryLexerNUMBER      = 30
	FilterQueryLexerQUOTED_TEXT = 31
	FilterQueryLexerKEY         = 32
	FilterQueryLexerWS          = 33
	FilterQueryLexerFREETEXT    = 34
)
