// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/SigNoz/signoz/pkg/querier (interfaces: Querier)
//
// Generated by this command:
//
//	mockgen --destination pkg/modules/export/implexport/mock.go --package implexport github.com/SigNoz/signoz/pkg/querier Querier
//

// Package implexport is a generated GoMock package.
package implexport

import (
	context "context"
	reflect "reflect"

	querybuildertypesv5 "github.com/SigNoz/signoz/pkg/types/querybuildertypes/querybuildertypesv5"
	valuer "github.com/SigNoz/signoz/pkg/valuer"
	gomock "go.uber.org/mock/gomock"
)

// MockQuerier is a mock of Querier interface.
type MockQuerier struct {
	ctrl     *gomock.Controller
	recorder *MockQuerierMockRecorder
	isgomock struct{}
}

// MockQuerierMockRecorder is the mock recorder for MockQuerier.
type MockQuerierMockRecorder struct {
	mock *MockQuerier
}

// NewMockQuerier creates a new mock instance.
func NewMockQuerier(ctrl *gomock.Controller) *MockQuerier {
	mock := &MockQuerier{ctrl: ctrl}
	mock.recorder = &MockQuerierMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockQuerier) EXPECT() *MockQuerierMockRecorder {
	return m.recorder
}

// QueryRange mocks base method.
func (m *MockQuerier) QueryRange(ctx context.Context, orgID valuer.UUID, req *querybuildertypesv5.QueryRangeRequest) (*querybuildertypesv5.QueryRangeResponse, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "QueryRange", ctx, orgID, req)
	ret0, _ := ret[0].(*querybuildertypesv5.QueryRangeResponse)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// QueryRange indicates an expected call of QueryRange.
func (mr *MockQuerierMockRecorder) QueryRange(ctx, orgID, req any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "QueryRange", reflect.TypeOf((*MockQuerier)(nil).QueryRange), ctx, orgID, req)
}
